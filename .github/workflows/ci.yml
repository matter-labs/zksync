name: CI

on:
  pull_request:
  push:
    branches:
    - rsk_merge_master_Dec2021

jobs:
  lint:
    runs-on:  ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: modify rsk node conf and install mkcert
        run: |
          wget https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
          chmod +x ./mkcert*
          cp ./mkcert* bin/mkcert
        
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d rskj postgres zk 
          ci_run sccache --start-server &
              
      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
      
      - name: generate SSL certificates
        run: |
          ci_run mkcert -CAROOT
          ci_run mkcert --install
          ci_run mkcert 127.0.0.1 localhost
          ci_run mv 127.0.0.1+1-key.pem key.pem
          ci_run mv 127.0.0.1+1.pem cert.pem

      - name: lints
        run: |
          ci_run zk
          ci_run zk fmt --check
          ci_run zk lint --check

  unit-tests:
    runs-on:  ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
        
      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d rskj postgres zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk run verify-keys unpack
          ci_run zk contract build
          ci_run zk run deploy-erc20 dev
          ci_run zk run deploy-eip1271
          ci_run zk db basic-setup
          ci_run zk run yarn

      - name: restart dev-liquidity-token-watcher and dev-ticker
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher dev-ticker

      - name: contracts-unit-tests
        run: ci_run zk test contracts

      - name: js-unit-tests
        run: ci_run zk test js

      - name: rust-unit-tests
        run: ci_run zk test server-rust

  integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup-env
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
        
      - name: modify rsk node conf and install mkcert
        run: |
          sed -i '/autoMine/ s/true/false/' docker/rskj/node.conf
          wget https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
          chmod +x ./mkcert*
          cp ./mkcert* bin/mkcert

      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d rskj postgres zk
          ci_run sccache --start-server &

      - name: setup-env (path)
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH

      - name: generate SSL certificates
        run: |
          ci_run mkcert -CAROOT
          ci_run mkcert --install
          ci_run mkcert 127.0.0.1 localhost
          ci_run mv 127.0.0.1+1-key.pem key.pem
          ci_run mv 127.0.0.1+1.pem cert.pem

      - name: run zk init
        run: |
          sed -i '/plonkSetup/d' infrastructure/zk/src/init.ts
          ci_run zk
          ci_run zk init

      - name: restart dev-liquidity-token-watcher and dev-ticker
        run: docker-compose -f docker-compose-runner.yml restart dev-liquidity-token-watcher dev-ticker


      - name: run-services
        run: |
          ci_run zk server  &>/dev/null &
          ci_run sleep 10
          ci_run zk dummy-prover run  &>/dev/null &
          ci_run sleep 100

      - name: integration-server
        run: ci_run zk test i server

      - name: integration-api
        run: |
          ci_run zk test i api
          ci_run zk test i api-docs

      - name: integration-zcli
        run: ci_run zk test i zcli

      - name: integration-rust-sdk
        run: ci_run zk test i rust-sdk
      
      - name: integration-withdrawal-helpers
        run: ci_run zk test i withdrawal-helpers

  circuit-tests:
    if: github.ref == 'master' # imply that this should run only on production or very controlled env. Refer to research doc
    runs-on:  ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: prepare
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk run verify-keys unpack

      - name: circuit-tests
        run: ci_run zk test crypto-rust

  testkit:
    runs-on:  ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: prepare
        run: |
          echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
          echo $(pwd)/bin >> $GITHUB_PATH
          echo PLUGIN_CONFIG=fast >> $GITHUB_ENV # use fast mode for rskj image (instant tx commit)

      - name: start-services
        run: |
          docker-compose -f docker-compose-runner.yml down
          docker-compose -f docker-compose-runner.yml pull
          docker-compose -f docker-compose-runner.yml up --build -d zk
          ci_run sccache --start-server

      - name: init
        run: |
          ci_run ln -s /usr/src/keys/setup keys/setup
          ci_run zk
          ci_run zk run verify-keys unpack
          ci_run zk contract build

      - name: integration-testkit
        run: ci_run zk test integration testkit --offline
