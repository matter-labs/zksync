name: Deploy Stage
on:
  push:
    branches:
      - dev
      - hotfix/*
    tags:
      - hotfix-*

# Disable simultaneous deployments into rinkeby-beta
concurrency: deploy.rinkeby-beta

jobs:
  images:
    name: Build Docker Images
    runs-on: [matterlabs-ci-runner]
    steps:
    - uses: actions/checkout@v2
    -
      name: setup-env
      run: |
        echo ZKSYNC_HOME=$(pwd) >> $GITHUB_ENV
        echo CI=1 >> $GITHUB_ENV
        echo $(pwd)/bin >> $GITHUB_PATH
    -
      name: start-services
      run: |
        docker-compose -f docker-compose-runner.yml down
        docker-compose -f docker-compose-runner.yml up -d zk postgres
    -
      name: init
      run: |
        ci_run zk
        ci_run zk run yarn
        ci_run cp etc/tokens/{test,localhost}.json
        ci_run zk run verify-keys unpack
        ci_run zk db basic-setup
    -
      name: update-images
      run: |
        ci_run docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        ci_run zk docker push rust
    -
      name: docker-down
      if: always()
      run: |
        docker-compose -f docker-compose-runner.yml down

#  setup:
#    name: Setup
#    uses: matter-labs/zksync-dev/.github/workflows/setup.runtime.yml@dev
#    needs: [images]
#    with:
#      environment: rinkeby-beta
#      create-deployment: true

#  update:
#    name: Update
#    uses: matter-labs/zksync-dev/.github/workflows/server.update-config.yml@dev
#    needs: [setup]
#    with:
#      ref: master
#      cluster: ${{ needs.setup.outputs.cluster }}
#      environment: ${{ needs.setup.outputs.environment }}
#      namespace: ${{ needs.setup.outputs.release-namespace }}
#    secrets:
#      github-token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

#  deploy:
#    name: Deploy
#    uses: matter-labs/zksync-dev/.github/workflows/deploy.yml@dev
#    needs: [setup, update]
#    with:
#      cluster: ${{ needs.setup.outputs.cluster }}
#      environment: ${{ needs.setup.outputs.environment }}
#      release-environment: ${{ needs.setup.outputs.release-environment }}
#      release-namespace: ${{ needs.setup.outputs.release-namespace }}
#      deployment-id: ${{ needs.setup.outputs.deployment-id }}
#      image-tag: ${{ needs.setup.outputs.sha-short }}
#    secrets:
#      github-token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

#  notify:
#    runs-on: ubuntu-latest
#    needs: [deploy]
#    if: always() && !cancelled()
#    steps:
#      - uses: technote-space/workflow-conclusion-action@v2
#      -
#        name: Notify to Mattermost (on incidents)
#        uses: tferreira/matterfy@releases/v1
#        if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
#        with:
#          type: failure
#          job_name: '*Deploy to `${{ needs.setup.outputs.environment }}` failed*'
#          icon_emoji: octocat
#          channel: 'ci-notifications'
#          url: ${{ secrets.MATTERMOST_WEBHOOK }}
