# zkSync chain parameters

[chain.circuit]
# Current directory for the circuit keys.
key_dir="keys/contracts-10"
# Actual supported block chunks sizes by verifier contract (determined by circuit size on setup boundaries)
# and setup power needed to proof block of this size.
supported_block_chunks_sizes=[26,78,182,390]
supported_block_chunks_sizes_setup_powers=[23,24,25,26]
# Actual
supported_aggregated_proof_sizes=[1,4,8]
supported_aggregated_proof_sizes_setup_power2=[22,23,24]

# Depths for the used sparse Merkle trees.
account_tree_depth=32
balance_tree_depth=32

[chain.eth]
# Name of the used Ethereum network.
network="localhost"

[chain.state_keeper]
# Block sizes to be generated by server.
block_chunk_sizes=[26,78,182]
# Aggregated proof sizes to be generated by server.
aggregated_proof_sizes=[1,4]
# Time between two miniblocks created by mempool.
miniblock_iteration_interval=50
# Maximum amount of miniblock iterations before sealing the block.
miniblock_iterations=2
# Maximum amount of miniblock iterations in case of block containing a fast withdrawal request.
fast_block_miniblock_iterations=1

# Max L2 blocks to commit in one L1 transaction.
max_aggregated_blocks_to_commit=10
# Max L2 blocks to execute in one L1 transaction.
max_aggregated_blocks_to_execute=10
# Time (seconds) after block is created with timestamp T after which L1 aggregated commit operation must be created.
block_commit_deadline=1
# Time (seconds) after block is created with timestamp T after which L1 aggregated prove operation must be created.
block_prove_deadline=1
# Time (seconds) after block is created with timestamp T after which L1 aggregated execute operation must be created.
block_execute_deadline=1
# Max gas that can be used to execute aggregated operation
# for now (should be > 4kk which is max gas for one block commit/verify/execute)
max_aggregated_tx_gas=5000000
